FROM alpine:3.11.6

ENV GOLANG_VERSION '1.15'
ENV GOLANG_SHA256 69438f7ed4f532154ffaf878f3dfd83747e7a00b70b3556eddabf7aaee28ac3a

RUN apk add --no-cache \
        ca-certificates \
        musl-dev \
        bash \
        gcc \
        make \
        libpcap \
        libpcap-dev \
        linux-headers \
        libnetfilter_queue-dev \
        file-dev \
        git \
        curl \
        openssh-client \
        alpine-sdk

RUN echo $GOLANG_VERSION

RUN set -eux; \
    apk add --no-cache --virtual .build-deps \
        go \
        openssl \
    ; \
    export \
# set GOROOT_BOOTSTRAP such that we can actually build Go
        GOROOT_BOOTSTRAP="$(go env GOROOT)" \
# ... and set "cross-building" related vars to the installed system's values so that we create a build targeting the proper arch
# (for example, if our build host is GOARCH=amd64, but our build env/image is GOARCH=386, our build needs GOARCH=386)
        GOOS="$(go env GOOS)" \
        GOARCH="$(go env GOARCH)" \
        GOHOSTOS="$(go env GOHOSTOS)" \
        GOHOSTARCH="$(go env GOHOSTARCH)" \
    ; \
# also explicitly set GO386 and GOARM if appropriate
# https://github.com/docker-library/golang/issues/184
    apkArch="$(apk --print-arch)"; \
    case "$apkArch" in \
        armhf) export GOARM='6' ;; \
        armv7) export GOARM='7' ;; \
        x86) export GO386='387' ;; \
    esac; \
    \
    curl -o go.tgz -sSL "https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz"; \
    echo "$GOLANG_SHA256 *go.tgz" | sha256sum -c -; \
    tar -C /usr/local -xzf go.tgz; \
    rm go.tgz; \
    \
    cd /usr/local/go/src; \
    ./make.bash; \
    \
    rm -rf \
# https://github.com/golang/go/blob/0b30cf534a03618162d3015c8705dd2231e34703/src/cmd/dist/buildtool.go#L121-L125
        /usr/local/go/pkg/bootstrap \
# https://golang.org/cl/82095
# https://github.com/golang/build/blob/e3fe1605c30f6a3fd136b561569933312ede8782/cmd/release/releaselet.go#L56
        /usr/local/go/pkg/obj \
    ; \
    apk del .build-deps; \
    \
    export PATH="/usr/local/go/bin:$PATH"; \
    go version

ENV GOPATH /go
ENV PATH $GOPATH/bin:/usr/local/go/bin:$PATH

RUN mkdir -p "$GOPATH/src" "$GOPATH/bin" && chmod -R 777 "$GOPATH"
WORKDIR $GOPATH

CMD ["/bin/bash"]